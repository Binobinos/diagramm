import logging
from uuid import uuid4

import func.prices as pc
from config import mongo_db
from func.dob_func_ import send_or_edit_menu
from func.func_text import show_product, show_orders
from keyboards.keyboard import order_kb_show, korzin_null, orders_admin_menu_kb, orders_menu_kb, \
    technical_support_menu_kb
from model.order import Orders
from model.reqwest import Reqwest
from model.temp_order import TempOrder


async def create_temp_order(user_id: int):
    acc = await mongo_db.get_user(user_id)
    price_dict = {acc.temp_order["–¢–∏–ø –æ—Ü–µ–Ω–∫–∏"]: {
        "1 –û—Ü–µ–Ω–∫–∞": 0,
        "2 –û—Ü–µ–Ω–∫–∞": acc.temp_order["–û—Ü–µ–Ω–∫–∞"],
        "–ø—Ä–µ–¥–º–µ—Ç": acc.temp_order["–ø—Ä–µ–¥–º–µ—Ç"]}}
    price = int(pc.calculating_the_price(price_dict))
    temp_order = TempOrder(id=str(uuid4()),
                           object=acc.temp_order["–ø—Ä–µ–¥–º–µ—Ç"],
                           quarter=acc.temp_order["–ß–µ—Ç–≤–µ—Ä—Ç—å"],
                           type=acc.temp_order["–¢–∏–ø –æ—Ü–µ–Ω–∫–∏"],
                           estimation=acc.temp_order["–û—Ü–µ–Ω–∫–∞"],
                           price=price)
    acc.order.products.append(temp_order)
    acc.temp_order = {}
    await mongo_db.update_user(acc)
    acc = await mongo_db.get_user(user_id)
    return acc


async def show_order(user_id: int):
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –∫–æ—Ä–∑–∏–Ω—É")
    a = list()
    acc = await mongo_db.get_user(user_id)
    b = 0.00
    for number, i in enumerate(acc.order.products):
        text = str(f"–¢–æ–≤–∞—Ä ‚Ññ{int(number) + 1} : \n {show_product(acc, number)}")
        a.append(text)
        b = float(sum(list(acc.order.products[number].price for number, i in enumerate(acc.order.products))))
    if acc.order.products:
        text = (
            "üéâ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞\n"
            f"üìô –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã\n============\n{"\n --------------------".join(a)}"
            f"============\n –û–±—â–∞—è —Ü–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ {b} —Ä—É–±–ª–µ–π ‚ÇΩ"
        )
        logging.info(f"—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∫–æ—Ä–∑–∏–Ω–∞:{"\n -------------------- \n".join(a)}")
        await send_or_edit_menu(user_id, text, order_kb_show(acc))
    else:
        text = (
            "üéâ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞\n"
            f"üìô –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞.. –ñ–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º?\n"
        )
        logging.info(f"—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –ø—É—Å—Ç–∞—è –∫–æ—Ä–∑–∏–Ω–∞")
        await send_or_edit_menu(user_id, text, korzin_null())


async def show_client_order(order: Orders, admin_id):
    logging.info(f"–ê–¥–º–∏–Ω {admin_id} –°–º–æ—Ç—Ä–∏—Ç –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {order.username} - {order.id}")
    a = list()
    b = 0.00
    for number, i in enumerate(order.products):
        text = str(f"–¢–æ–≤–∞—Ä ‚Ññ{int(number) + 1} : \n {show_orders(order, number)}")
        a.append(text)
        b = float(sum(list(order.products[number].price for number, i in enumerate(order.products))))
    text = (
        "üéâ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –≠—Ç–æ –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞\n"
        f"üìô –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã\n============\n{"--------------------\n".join(a)}"
        f"============\n –û–±—â–∞—è —Ü–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ {b} —Ä—É–±–ª–µ–π ‚ÇΩ"
    )
    await send_or_edit_menu(admin_id, text, orders_admin_menu_kb())


async def show_orders_menu(user_id: int, start=0):
    logging.info(f"–∞–¥–º–∏–Ω {user_id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –∑–∞–∫–∞–∑–æ–≤")
    orders = await mongo_db.get_all_orders()
    orders = list(Orders(**i) for i in orders)[::-1]
    text = (
        "üåü –ó–∞–∫–∞–∑—ã:\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑–∞–º–∏\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(orders)}"
    )
    await send_or_edit_menu(user_id, text, orders_menu_kb(orders, start))


async def technical_support_orders_menu(user_id: int, start=0):
    logging.info(f"–∞–¥–º–∏–Ω {user_id} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –∑–∞–∫–∞–∑–æ–≤")
    orders = await mongo_db.get_all_reqwest()
    orders = list(Reqwest(**i) for i in orders)[::-1]
    text = (
        "üåü –û–±—Ä–∞—â–µ–Ω–∏—è:\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –û–±—Ä–∞—â–µ–Ω–∏–π: {len(orders)}"
    )
    await send_or_edit_menu(user_id, text, technical_support_menu_kb(orders, start))
