from dob_func.dob_func import *
from aiogram import Router, types
router = Router()
logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(message)s")

@router.callback_query(F.data == "my_predmet")
async def show_my_predmet(callback: types.CallbackQuery):
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –æ—Ç–∫—Ä—ã–ª –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞")
    await show_predmets_menu(callback.from_user.id)
    await callback.answer()


@router.callback_query(F.data.startswith("predmet_"))
async def show_account(callback: types.CallbackQuery):
    """
    –í—ã–±–æ—Ä –ß–µ—Ç–≤–µ—Ä—Ç–∏
    :param callback: None
    :return: None
    """
    user_id = callback.from_user.id
    predmets = callback.data.split("_")[1]
    acc = await mongo_db.get_user(user_id)
    acc.temp_order["–ø—Ä–µ–¥–º–µ—Ç"] = predmets
    await mongo_db.update_user(acc)
    text = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {predmets}\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ß–µ—Ç–≤–µ—Ä—Ç—å:"
    )
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥–º–µ—Ç {predmets}")
    await send_or_edit_menu(
        user_id,
        text,
        accounts_cht_kb()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("CHT_"))
async def show_type(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    predmets = callback.data.split("_")[1]
    acc = await mongo_db.get_user(user_id)
    acc.temp_order["–ß–µ—Ç–≤–µ—Ä—Ç—å"] = predmets
    await mongo_db.update_user(acc)
    text = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {predmets}-—É—é –ß–µ—Ç–≤–µ—Ä—Ç—å"
        "\n–í—ã–±–µ—Ä–∏—Ç–µ –¢–∏–ø –û—Ü–µ–Ω–∫–∏:"
    )
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –≤—ã–±—Ä–∞–ª —á–µ—Ç–≤–µ—Ä—Ç—å {predmets}")
    await send_or_edit_menu(
        user_id,
        text,
        accounts_type_kb(type_items)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("tip_"))
async def show_account_(callback: types.CallbackQuery):
    """
    –í—ã–±–æ—Ä –ß–µ—Ç–≤–µ—Ä—Ç–∏
    :param callback: None
    :return: None
    """
    user_id = callback.from_user.id
    predmets = callback.data.split("_")[1]
    acc = await mongo_db.get_user(user_id)
    acc.temp_order["–¢–∏–ø –æ—Ü–µ–Ω–∫–∏"] = predmets
    await mongo_db.update_user(acc)
    text = (
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {predmets}\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –û—Ü–µ–Ω–∫—É:"
    )
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –≤—ã–±—Ä–∞–ª —Ç–∏–ø –æ—Ü–µ–Ω–∫–∏ {predmets}")
    await send_or_edit_menu(
        user_id,
        text,
        accounts_tip_o_kb(acc)
    )
    await callback.answer()


@router.callback_query(F.data.startswith("type_"))
async def select_class(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    predmets = callback.data.split("_")[1]
    acc = await mongo_db.get_user(user_id)
    acc.temp_order["–û—Ü–µ–Ω–∫–∞"] = predmets
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –≤—ã–±—Ä–∞–ª –æ—Ü–µ–Ω–∫—É {predmets}")
    await mongo_db.update_user(acc)
    acc = await mongo_db.get_user(user_id)
    temp_order = Temp_order(id=str(uuid4()), object=acc.temp_order["–ø—Ä–µ–¥–º–µ—Ç"], quarter=acc.temp_order["–ß–µ—Ç–≤–µ—Ä—Ç—å"],
                            type=acc.temp_order["–¢–∏–ø –æ—Ü–µ–Ω–∫–∏"], estimation=acc.temp_order["–û—Ü–µ–Ω–∫–∞"], price=int(
            calculating_the_price({acc.temp_order["–¢–∏–ø –æ—Ü–µ–Ω–∫–∏"]: {"1 –û—Ü–µ–Ω–∫–∞": 0, "2 –û—Ü–µ–Ω–∫–∞": acc.temp_order["–û—Ü–µ–Ω–∫–∞"],
                                                                  "–ø—Ä–µ–¥–º–µ—Ç": acc.temp_order["–ø—Ä–µ–¥–º–µ—Ç"]}})))
    acc.order.products.append(temp_order)
    acc.temp_order = {}
    text = (
        f"üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ó–∞–∫–∞–∑–µ:\n\n–§–ò–û - {acc.full_name}\n–ö–ª–∞—Å—Å - {acc.parallel} {acc.class_name}\n{show_tofar(acc)}"
        "\n–í—Å—ë –≤–µ—Ä–Ω–æ?"
    )
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç —Ç–æ–≤–∞—Ä")
    await send_or_edit_menu(
        user_id,
        text,
        edit_zacaz_kb()
    )
    await callback.answer()
