from aiogram import Router, F
from aiogram import types

from dob_func.dob_func import *
from keyboards.keyboard import order_admin_menu_kb
from model.order import Orders

router = Router()
logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(message)s")
type_items = {"–†–∞–±–æ—Ç–∞ –Ω–∞ —É—Ä–æ–∫–µ": 1, "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 1.04, "–ü—Ä–æ–≤–µ—Ä–æ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 1.05,
              "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞": 1.06}


@router.callback_query(F.data == "order")
async def show_my_order(callback: types.CallbackQuery):
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –æ—Ç–∫—Ä—ã–ª –∫–æ—Ä–∑–∏–∏–Ω—É")
    await show_order(callback.from_user.id)
    await callback.answer()


@router.callback_query(F.data.startswith("*order-new_"))
async def show_admin_order(callback: types.CallbackQuery):
    logging.info(f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –æ—Ç–∫—Ä—ã–ª –∫–æ—Ä–∑–∏–∏–Ω—É")
    ids = callback.data.split('_')[1]
    order = await mongo_db.get_order(ids)
    await show_client_order(order, callback.from_user.id)
    await callback.answer()


@router.callback_query(F.data.startswith("Orders_"))
async def start_create_account(callback: types.CallbackQuery):
    start = int(callback.data.split("_")[1])
    logging.info(f"–ê–¥–º–∏–Ω {callback.from_user.username} –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∑–∞–∫–∞–∑—ã c {start}")
    await show_orders_menu(callback.from_user.id, start)


@router.callback_query(F.data.startswith("Technical_support_"))
async def Technical_support_menu(callback: types.CallbackQuery):
    start = int(callback.data.split("_")[2])
    logging.info(f"–ê–¥–º–∏–Ω {callback.from_user.username} –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∑–∞–∫–∞–∑—ã c {start}")
    await Technical_support_orders_menu(callback.from_user.id, start)


@router.callback_query(F.data == "add_corzin")
async def back_to_main(callback: types.CallbackQuery):
    acc = await create_temp_order(callback.from_user.id)
    logging.info(
        f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–∞—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä \n"
        f"{show_tofar(acc)} \n –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    await show_main_menu(callback.from_user.id)
    await callback.answer()


@router.callback_query(F.data == "order_zakaz")
async def back_to_main(callback: types.CallbackQuery):
    acc = await create_temp_order(callback.from_user.id)
    logging.info(
        f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–∞—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä \n"
        f"{show_tofar(acc)} \n –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É")
    await show_my_order(callback)


@router.callback_query(F.data == "pay")
async def back_to_main(callback: types.CallbackQuery):
    acc = await mongo_db.get_user(callback.from_user.id)
    acc.order.price = sum(item.price * item.discount for item in acc.order.products)
    acc.order.full_name = acc.full_name
    acc.order.username = acc.username
    acc.order.parallel = acc.parallel
    acc.order.class_name = acc.class_name
    await mongo_db.insert_order(acc.order)
    acc.order = Orders(id=str(uuid4()), product=[])
    await mongo_db.update_user(acc)
    await send_admins(f"üéâ –í–∞–º –ø—Ä–∏—à—ë–ª –∑–∞–∫–∞–∑!", order_admin_menu_kb(), acc)
    logging.info(
        f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.username} –ø –≤ –∫–∞—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä \n"
        f"{show_tofar(acc)} \n –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É")
    await show_main_menu(callback.from_user.id)
